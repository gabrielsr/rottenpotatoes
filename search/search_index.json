{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>This project is a version of myrottenpotatoes by Armando Fox (@armandofox). Myrottenpotatoes developed as a companinon to the book Engineering Software as a Service, in ruby on rails. </p> <p>This version is developed in Python to be used in the Software Engineering course at University of Brasilia. We followed the conventions defined in the book Flask Web Development (FWD)</p>"},{"location":"#steps-to-create-this-repo","title":"Steps to create this repo","text":""},{"location":"about/","title":"About","text":"<p>This project is a version of myrottenpotatoes by Armando Fox (@armandofox). Myrottenpotatoes developed as a companinon to the book Engineering Software as a Service, in ruby on rails. </p> <p>This version is developed in Python to be used in the Software Engineering course, University of Brasilia. We followed the conventions defined in the book Flask Web Development (FWD)</p> <p>[Dependency Management] </p>"},{"location":"dev_tools/","title":"Poety","text":"<p>Poetry is a a tool for mananging dependencies.</p> <p>Setup poetry in the development machine. Follwing Install poetry[https://python-poetry.org/docs/]</p>"},{"location":"dev_tools/#run-tests","title":"Run Tests","text":"<p><code>poetry run pytest</code></p>"},{"location":"dev_tools/#view-docs","title":"View Docs","text":"<p><code>poetry run mkdocs serve</code></p>"},{"location":"project_structure/","title":"Project structure","text":"<p>''' |- app/     | - api</p> <p>'''</p> <p>Defines RESTful APIs</p>"},{"location":"setup_logs/step0_development_env/","title":"Step0 development env","text":"<p>== Requirements ===</p> <p>Python Poetry git</p> <p>== Setup tests</p> <p>Included pytest as a dependency</p> <p>''' [tool.poetry.group.test]  # This part can be left out</p> <p>[tool.poetry.group.test.dependencies] pytest = \"^6.0.0\" pytest-mock = \"*\" ''' </p> <p>== Initial Dev Setup</p> <p>''' poetry install '''</p> <p>== Activate Env (For each new terminal session)</p> <p>''' poetry shell '''' </p> <p>== Run tests</p> <p>created a test_test.py file and running pytest with:</p> <p>''' poetry run pytest '''' </p> <p>== VSCode Installed Extensions: - Better TOML</p>"},{"location":"setup_logs/step10_twitter_bootstrap/","title":"Step10 twitter bootstrap","text":"<p>Ref.:     https://bootstrap-flask.readthedocs.io/</p> <p># Add dependency  <code>poetry add bootstrap-flask</code></p> <p># Register Extension</p> <p>Register the extension in <code>webapp.py</code></p> <pre><code>from flask import Flask\n# To follow the naming rule of Flask extension, although\n# this project's name is Bootstrap-Flask, the actual package\n# installed is named `flask_bootstrap`.\nfrom flask_bootstrap import Bootstrap5\n\n# ...\napp = Flask(__name__)\nbootstrap = Bootstrap5(app)\n</code></pre>"},{"location":"setup_logs/step10_twitter_bootstrap/#add-a-base-template","title":"Add a base template","text":"<p>added file in <code>tempaltes/base.html</code></p>"},{"location":"setup_logs/step10_twitter_bootstrap/#create-an-index-that-extends-boostrap","title":"Create an index that extends boostrap","text":"<p><code>{% extends \"base.html\" %}</code> in <code>index.html</code></p>"},{"location":"setup_logs/step10_twitter_bootstrap/#rendering-template","title":"Rendering Template","text":"<p>In the controller action (e.g., @app.get(\"/\")) use render_template'</p> <pre><code>    return render_template(\"index.html\")\n</code></pre>"},{"location":"setup_logs/step11_setup_blueprint_and_auth_structure/","title":"Step11 setup blueprint and auth structure","text":"<p>Ref.:  https://flask.palletsprojects.com/en/2.3.x/tutorial/views/#create-a-blueprint</p>"},{"location":"setup_logs/step11_setup_blueprint_and_auth_structure/#setting-session-key","title":"Setting Session Key","text":"<p>Ref. https://flask-session.readthedocs.io/en/latest/#quickstart</p> <p>This is needed for forms</p> <pre><code>    app.config.from_mapping(\n        SECRET_KEY=\"dev\",\n    )\n    app.config.from_prefixed_env()\n</code></pre>"},{"location":"setup_logs/step11_setup_blueprint_and_auth_structure/#create-auth-module","title":"create auth module","text":"<p>\\controllers   |- auth.py \\templates   - auth     |- login.html     |- register.html</p>"},{"location":"setup_logs/step11_setup_blueprint_and_auth_structure/#register-a-blueprint-in-webapppy","title":"Register a blueprint in webapp.py","text":"<pre><code>    from .controllers.auth import bp as auth_bp\n    app.register_blueprint(auth_bp)\n</code></pre>"},{"location":"setup_logs/step12_wtform/","title":"Step12 wtform","text":"<p>Ref.: https://flask-wtf.readthedocs.io</p>"},{"location":"setup_logs/step12_wtform/#install","title":"Install","text":"<p><code>poetry add  Flask-WTF</code> </p>"},{"location":"setup_logs/step12_wtform/#update-auth-to-use-wtf","title":"Update auth to use WTF","text":"<p>Create a Form in <code>auth.py</code> Render the form in <code>auth/register.html</code> </p>"},{"location":"setup_logs/step13_sqlalchemy/","title":"Add dependency","text":"<p><code>poetry add Flask-SQLAlchemy</code></p>"},{"location":"setup_logs/step13_sqlalchemy/#initialize-db","title":"Initialize db","text":"<ol> <li>Instantiate SQLAlchemy in <code>models/__init__.py</code></li> <li>Bind app and db in webapp.py</li> </ol>"},{"location":"setup_logs/step13_sqlalchemy/#access","title":"Access","text":"<p>Use flask shell <code>$ poetry run flask --app app/webapp shell</code></p> <p>Create user</p> <pre><code>&gt;&gt;&gt; \n&gt;&gt;&gt;user = User(firstname=\"gab\", lastname=\"rod\", email=\"email\", age=1)\n&gt;&gt;&gt;db.session.add(user)\n&gt;&gt;&gt;db.session.commit()\n</code></pre> <p>Use SQL Lite viewer to to see the newly created database, with user table and the new user.</p>"},{"location":"setup_logs/step14_flask_login/","title":"Step14 flask login","text":"<p>Ref.: https://www.freecodecamp.org/news/how-to-authenticate-users-in-flask/</p>"},{"location":"setup_logs/step14_flask_login/#install-dependency","title":"Install dependency","text":"<p>poetry add flask-login poetry add flask-migrate poetry add email_validator poetry add flask-migrate</p>"},{"location":"setup_logs/step14_flask_login/#initialize-extensions-in-webapp","title":"Initialize extensions in webapp","text":"<p>Creating module auth</p> <p>|- auth  _ controller.py  _ forms.py  _ loader.py</p> <p>Controllers  - MVC controller for login, logout, register and profile view  Forms  - Forms used in auth  Loaders - Put the logged in user in the request</p>"},{"location":"setup_logs/step14_flask_login/#create-migration","title":"Create Migration","text":"<p><code>python manage.py</code> </p>"},{"location":"setup_logs/step15_debug/","title":"Step15 debug","text":"<p>Ref.: https://code.visualstudio.com/docs/python/tutorial-flask</p> <p>Instsall Edge DevTools</p>"},{"location":"setup_logs/step15_debug/#create-launchjson","title":"Create launch.json","text":"<p>Create Flask Launch</p> <pre><code>{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"vscode-edge-devtools.debug\",\n            \"request\": \"launch\",\n            \"name\": \"Launch Microsoft Edge and open the Edge DevTools\",\n            \"url\": \"http://127.0.0.1:5000\",\n            \"webRoot\": \"${workspaceFolder}\"\n        },\n        {\n            \"name\": \"Python: Flask\",\n            \"type\": \"python\",\n            \"request\": \"launch\",\n            \"module\": \"flask\",\n            \"env\": {\n                \"FLASK_APP\": \"app/webapp\",\n                \"FLASK_DEBUG\": \"1\"\n            },\n            \"args\": [\n                \"run\",\n                \"--no-debugger\",\n                \"--no-reload\"\n            ],\n            \"jinja\": true,\n            \"justMyCode\": true\n        },\n    ],\n    \"compounds\": [\n        {\n            \"name\": \"Flask and Edge\",\n            \"configurations\": [\n                \"Python: Flask\",\n                \"Launch Microsoft Edge and open the Edge DevTools\"\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"setup_logs/step15_debug/#run","title":"Run","text":"<p>Crtl+Shift + D and F5 Open MS Edge Tools Menu and Launch </p>"},{"location":"setup_logs/step16_create_a_crud/","title":"Implement User Crud","text":"<p>. Create a list and edit page . Create a users_controller.py</p>"},{"location":"setup_logs/step16_create_a_crud/#refactoring","title":"Refactoring","text":"<p>Install Better Jinja plugin Rename .html to .jinja2</p>"},{"location":"setup_logs/step17_movies_crud/","title":"Create Model","text":"<p>. Implement <code>/models/movie.py</code> based on rottenpotatoes</p>"},{"location":"setup_logs/step17_movies_crud/#seeding-the-database","title":"Seeding the database","text":"<p>Create <code>app/seed.py</code> with some movies Create <code>app/cli_cmds.py</code> for adding the <code>flask admin seed</code> command to seed data to the db.</p>"},{"location":"setup_logs/step18_movies_crud/","title":"created templates","text":"<p><code>tempaltes/movie/edit.jinja2</code> <code>tempaltes/movie/index.jinja2</code> <code>tempaltes/movie/new.jinja2</code> <code>tempaltes/movie/show.jinja2</code></p>"},{"location":"setup_logs/step18_movies_crud/#created-controller","title":"created controller","text":"<p>Created controller <code>controllers/movies_controller.py</code></p> <p>Linked it in <code>controllers/__init__.py</code> to expose it and make the blueprint to be found by webapp.</p>"},{"location":"setup_logs/step18_movies_crud/#_1","title":"created templates","text":""},{"location":"setup_logs/step19_config_env/","title":"Step19 config env","text":"<p>Ref.  https://prettyprinted.com/tutorials/automatically_load_environment_variables_in_flask/</p>"},{"location":"setup_logs/step19_config_env/#creating","title":"Creating","text":"<p><code>/.flaskenv</code> <code>/.env</code></p>"},{"location":"setup_logs/step19_config_env/#add-python-dotenv","title":"Add python-dotenv","text":"<p><code>poetry add python-dotenv</code></p>"},{"location":"setup_logs/step19_config_env/#adding-different-environments","title":"Adding different environments","text":"<p>Adding file <code>app/config.py</code> and loading it in <code>app/webapp.py</code></p>"},{"location":"setup_logs/step1_initial_project_setup/","title":"Step1 initial project setup","text":"<p>Used poetry to create a new project.</p> <p>''' $ poetry new rottenpotatoes '''</p>"},{"location":"setup_logs/step20_oauth/","title":"Add Flask-Dance","text":"<p><code>poetry add flask-dance</code></p>"},{"location":"setup_logs/step20_oauth/#setup-google-oauth","title":"Setup Google OAuth","text":"<p>Create a blueprint for handling auth with Google in <code>app/oauth.py</code>.</p>"},{"location":"setup_logs/step20_oauth/#create-app-on-google-cloud","title":"Create App on Google Cloud","text":"<p>On https://console.cloud.google.com/apis/credentials</p> <p>Create a Oauth 2.0 Client Get Client ID and Secret Key Setup as an authorized redirect url: <code>http://127.0.0.1:5000/auth/google/authorized</code></p>"},{"location":"setup_logs/step20_oauth/#create-app-on-github","title":"Create App on Github","text":"<p>On Github &gt; Settings &gt; Developer Settings &gt; OAuth Apps</p> <p>https://github.com/settings/developers</p> <p>Create App Get Client ID and Secret Key Configure as an authorized redirect url: <code>http://127.0.0.1:5000/auth/github/authorized</code></p>"},{"location":"setup_logs/step21_setup_api_with_swagger/","title":"Step21 setup api with swagger","text":"<p>Ref.      https://flask-restx.readthedocs.io</p>"},{"location":"setup_logs/step21_setup_api_with_swagger/#include-flask-restx","title":"Include Flask RestX","text":"<p><code>poetry add flask-restx</code></p>"},{"location":"setup_logs/step21_setup_api_with_swagger/#create-blueprint-and-resource","title":"Create Blueprint and Resource","text":"<p><code>/api  |- reviews.py</code></p>"},{"location":"setup_logs/step21_setup_api_with_swagger/#register-api-blueprint","title":"Register api blueprint","text":"<p><code>app/webapp.py</code> '''     # register api blueprint      from .api import blueprint as api_bp     app.register_blueprint(api_bp, url_prefix='/api/v1') '''</p>"},{"location":"setup_logs/step2_setup_docs/","title":"VSCode","text":"<ul> <li>Markdown All in One</li> </ul>"},{"location":"setup_logs/step2_setup_docs/#add-dependencies","title":"Add Dependencies","text":"<p>''' [tool.poetry.group.docs] optional = true</p> <p>[tool.poetry.group.docs.dependencies] mkdocs = \"*\" '''</p>"},{"location":"setup_logs/step2_setup_docs/#initial-config","title":"Initial config","text":"<p>''' mkdocs new . '''</p>"},{"location":"setup_logs/step2_setup_docs/#build-docs","title":"Build Docs","text":""},{"location":"setup_logs/step3_init_repo/","title":"Init Repo","text":"<p>Got a .gitignore, initalized the repo and realized the first commit </p> <p>''' wget https://raw.githubusercontent.com/github/gitignore/main/Python.gitignore mv Python.gitignore .gitignore git init git add --all git commit -m \"initial commit\" ''' </p>"},{"location":"setup_logs/step3_init_repo/#swhich-to-branch-main","title":"Swhich to branch main","text":"<p><code>git branch -m master main</code> <code>git checkout main</code></p> <p>Reconfigure default branch in the interface</p> <p><code>git push origin --delete master</code></p>"},{"location":"setup_logs/step4_setup_an_initial_application/","title":"Following","text":"<p>Appfactory pattern</p> <p>https://flask.palletsprojects.com/en/2.2.x/patterns/appfactories/</p> <p>Testing</p> <p>https://flask.palletsprojects.com/en/2.2.x/testing/?highlight=test</p>"},{"location":"setup_logs/step5_check_vscode/","title":"Fix configurations","text":"<p>Fix issues with pytest not found</p> <p><code>poetry config virtualenvs.in-project true</code></p> <p>. Ctrl + Shift + P: Python select interpreter . select the poetry virtual env</p>"},{"location":"setup_logs/step5_check_vscode/#setup-code-formatter","title":"Setup Code Formatter","text":"<p><code>poetry add black --dev</code> Shift + Alt + F - Select black as autoformater </p>"},{"location":"setup_logs/step5_check_vscode/#pylint","title":"Pylint","text":"<p>vscode: install extension pylint poetry add pylint --group dev</p>"},{"location":"setup_logs/step6_setup_docs_publish/","title":"Define a github workflow","text":"<p>create folder   |- .github    |- workflow</p>"},{"location":"setup_logs/step7_deployment/","title":"Gunicorn Entry point","text":"<p>created  | application.py | requirements.txt</p> <p>The file import <code>app</code> from app.webapp.py. Azure use <code>application:app</code> as default for running gunicorn.</p>"},{"location":"setup_logs/step7_deployment/#setup-azure-cli","title":"Setup Azure Cli","text":"<p>curl -L https://aka.ms/InstallAzureCli | bash</p> <p>az login --use-device-code</p>"},{"location":"setup_logs/step7_deployment/#create-a-running-environment","title":"Create a Running Environment","text":"<p><code>az webapp up --runtime PYTHON:3.10 --resource-group seunb --sku F1</code></p> <p>This command should also create a <code>.azure/config</code> file with the new machine properties. </p>"},{"location":"setup_logs/step7_deployment/#update-already-configured-machine","title":"Update already configured machine","text":"<p><code>az webapp up</code></p>"},{"location":"setup_logs/step7_deployment/#read-logs","title":"Read Logs","text":"<p><code>az webapp log tail</code></p>"},{"location":"setup_logs/step7_deployment/#create-github-action","title":"Create Github Action","text":"<p>az webapp deployment github-actions add \\   --repo \"gabrielsr/rottenpotatoes\" \\   --resource-group esunb \\   --branch main \\   --name  \\   --login-with-github"},{"location":"setup_logs/step7_deployment/#delete-app","title":"Delete App","text":"<p>az group delete \\     --name msdocs-python-webapp-quickstart \\     --no-wait</p>"},{"location":"setup_logs/step7_deployment/#access","title":"Access","text":"<p>https://green-wave-a6e316b5d8f04194b6ca148a95d18bad.azurewebsites.net</p>"},{"location":"setup_logs/step7_deployment/#admin","title":"Admin","text":"<p>https://green-wave-a6e316b5d8f04194b6ca148a95d18bad.scm.azurewebsites.net/webssh/host</p> <p>https://github.com/Azure/webapps-deploy/issues/28 https://stackoverflow.com/questions/64518967/azure-github-app-deployment-error-publish-profile-does-not-contain-kudu-url</p>"},{"location":"setup_logs/step8_ci_cd/","title":"Configure","text":"<p>Create action</p> <p><code>az webapp deployment github-actions add \\   --repo \"gabrielsr/rottenpotatoes\" \\   --branch main \\   --login-with-github</code></p>"},{"location":"setup_logs/step9_config_crud_gen/","title":"AppBuilder","text":""},{"location":"setup_logs/step9_config_crud_gen/#setup","title":"Setup","text":"<p>pip install flask-appbuilder</p> <p>https://flask-appbuilder.readthedocs.io/en/latest/installation.html#using-pip</p> <p>flask fab create-app</p>"}]}